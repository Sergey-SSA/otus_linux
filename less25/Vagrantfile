# -*- mode: ruby -*-
# vi: set ft=ruby :
Mashines = {
    :iR => {
    },
    :cR => {
    },
    :tcl1 => {
    },
    :tcl2 => {
    },
    :ts1 => {
    },
    :ts2 => {
    },
}

Vagrant.configure(2) do |config|
    config.vm.box = "centos/7"
    config.vm.box_version = "1905.1"
  
    config.vm.provider "virtualbox" do |v|
      v.memory = 256
      v.cpus = 1
    end
  
    config.vm.define "iR" do |iR|
      iR.vm.network "private_network", ip: "172.16.10.5"
      iR.vm.network "private_network", ip: "", virtualbox__intnet: "iR_cR1"
      iR.vm.network "private_network", ip: "", virtualbox__intnet: "iR_cR2"
      iR.vm.hostname = "iR"
    end
  
    config.vm.define "cR" do |cR|
      cR.vm.network "private_network", ip: "172.16.10.10"
      cR.vm.network "private_network", ip: "", virtualbox__intnet: "iR_cR1"
      cR.vm.network "private_network", ip: "", virtualbox__intnet: "iR_cR2"
      cR.vm.network "private_network", ip: "1.1.1.1", virtualbox__intnet: "local_N"
      cR.vm.hostname = "cR"
    end
  
    config.vm.define "tc1" do |tc1|
      tc1.vm.network "private_network", ip: "172.16.10.11"
      tc1.vm.network "private_network", ip: "1.1.1.10", virtualbox__intnet: "local_N"
      tc1.vm.hostname = "tc1"
    end

    config.vm.define "tc2" do |tc2|
      tc2.vm.network "private_network", ip: "172.16.10.12"
      tc2.vm.network "private_network", ip: "1.1.1.11", virtualbox__intnet: "local_N"
      tc2.vm.hostname = "tc2"
    end

    config.vm.define "ts1" do |ts1|
      ts1.vm.network "private_network", ip: "172.16.10.13"
      ts1.vm.network "private_network", ip: "1.1.1.20", virtualbox__intnet: "local_N"
      ts1.vm.hostname = "ts1"
    end
    config.vm.define "ts2" do |ts2|
      ts2.vm.network "private_network", ip: "172.16.10.14"
      ts2.vm.network "private_network", ip: "1.1.1.21", virtualbox__intnet: "local_N"
      ts2.vm.hostname = "ts2"
    end

    config.vm.provision "shell", inline: <<-SHELL
    mkdir -p ~root/.ssh
    cp ~vagrant/.ssh/auth* ~root/.ssh
    sed -i '65s/PasswordAuthentication no/PasswordAuthentication yes/g' /etc/ssh/sshd_config
        systemctl restart sshd
    sudo yum install -y epel-release
    sudo yum install -y ansible
    name=`hostname`
    SHELL

    config.vm.provision :ansible do |ansible|
    ansible.inventory_path = "inventories/all.yml"
    ansible.limit = $name
        ansible.playbook = "less25.yml"
    end	
  end